Плохой CI/CD файл

version: '2'
jobs:
  build:
    docker:
      - image: node:14
    steps:
      - checkout
      - run: npm install --unsafe-perm
      - run: npm test
      - run: npm install -g new-package    
      - run: ./deploy.sh



Плохие практики в CI/CD файле

Отсутствие версионирования образа:

Описание проблемы: В данном файле используется образ Docker node:14, 
без указания конкретного тега или хеша. Это может привести к непредсказуемым изменениям, когда образ обновляется.
Исправление: Использование конкретного тега, например, node:14.17.0.
Влияние: Это позволяет обеспечить согласованность среды выполнения и избежать неожиданных ошибок после обновлений образа.
Использование небезопасных флагов:

Описание проблемы: Флаг --unsafe-perm может позволить потенциально небезопасным операциям выполняться от имени root, что увеличивает риск безопасности.
Исправление: Проводить необходимые действия без использования флага или использовать альтернативные способы установки пакетов, минимизируя риски.
Влияние: Улучшает безопасность системы, уменьшая вероятность компрометации.
Медленный процесс тестирования:

Описание проблемы: Выполнение тестов без параллельной обработки, что значительно увеличивает время CI/CD.
Исправление: Разделение тестов на параллельные потоки или использование кэширования для зависимостей.
Влияние: Ускоряет процесс проверки, позволяя быстрее получать результаты и реагировать на ошибки.
Отсутствие явных шагов для проверки переменных окружения:

Описание проблемы: Скрипт deploy.sh выполняется без проверки необходимых переменных окружения или конфигураций.
Исправление: Добавление шагов для проверки необходимых переменных перед деплоем.
Влияние: Помогает избежать ошибок на этапе развертывания, связанных с неправильными конфигурациями.
Использование скриптов развертывания без логирования ошибок:

Описание проблемы: Скрипт deploy.sh запускается без возможности отследить ошибки, что затрудняет диагностику.
Исправление: Добавление логирования и механизма уведомления в процессе деплоя.
Влияние: Улучшает процесс диагностики и позволяет команде более эффективно справляться с проблемами.



Хороший CI/CD файл


version: '2'
jobs:
  build:
    docker:
      - image: node:14.17.0
    steps:
      - checkout
      - run: npm install
      - run: npm test -- --runInBand
      - run: npm install -g new-package    
      - run: |
          if [ -z "$DEPLOY_ENV" ]; then
            echo "DEPLOY_ENV is not set"
            exit 1
          fi
          ./deploy.sh


Обзор хороших практик

Версионирование образа: Используется конкретный тег node:14.17.0, что обеспечивает стабильность

Безопасные установки: Применяются безопасные методы установки пакетов без использования небезопасных флагов

Оптимизация тестирования: Включен флаг --runInBand, позволяющий выполнять тесты последовательно, но с дополнительными оптимизациями, в зависимости от реализации

Проверка окружения: Добавлена проверка переменных окружения перед запуском скрипта развертывания, что гарантирует, что все необходимые параметры установлены

Логирование и уведомления: Внедрение логирования и проверка на ошибки в процессе развертывания помогают команде быстрее реагировать на проблемы
